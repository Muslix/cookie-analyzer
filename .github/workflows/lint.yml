name: Code Quality

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: 'pip'  # Enable pip caching for faster installs
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pylint black isort mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -e .
        
    - name: Check code formatting with Black
      id: black
      continue-on-error: true
      run: |
        black --check --diff cookie_analyzer tests
        echo "BLACK_EXIT_CODE=$?" >> $GITHUB_OUTPUT
      
    - name: Check import sorting with isort
      id: isort
      continue-on-error: true
      run: |
        isort --check-only --diff --profile black cookie_analyzer tests
        echo "ISORT_EXIT_CODE=$?" >> $GITHUB_OUTPUT
      
    - name: Lint with flake8
      id: flake8
      continue-on-error: true
      run: |
        flake8 cookie_analyzer tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 cookie_analyzer tests --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
        echo "FLAKE8_EXIT_CODE=$?" >> $GITHUB_OUTPUT
      
    - name: Lint with pylint
      id: pylint
      continue-on-error: true
      run: |
        pylint --disable=C0111,C0103,C0303,W1201,W1202,C0200,W0612,R0913,R0914 cookie_analyzer tests
        echo "PYLINT_EXIT_CODE=$?" >> $GITHUB_OUTPUT

    - name: Static type checking with mypy
      id: mypy
      continue-on-error: true
      run: |
        mypy --ignore-missing-imports cookie_analyzer
        echo "MYPY_EXIT_CODE=$?" >> $GITHUB_OUTPUT

    - name: Report Linting Results
      run: |
        echo "## Code Quality Check Results" >> $GITHUB_STEP_SUMMARY
        echo "| Tool | Status |" >> $GITHUB_STEP_SUMMARY
        echo "| ---- | ------ |" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.black.outputs.BLACK_EXIT_CODE }}" -eq "0" ]; then
          echo "| Black | ✅ |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| Black | ❌ |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ steps.isort.outputs.ISORT_EXIT_CODE }}" -eq "0" ]; then
          echo "| isort | ✅ |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| isort | ❌ |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ steps.flake8.outputs.FLAKE8_EXIT_CODE }}" -eq "0" ]; then
          echo "| flake8 | ✅ |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| flake8 | ❌ |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ steps.pylint.outputs.PYLINT_EXIT_CODE }}" -eq "0" ]; then
          echo "| pylint | ✅ |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| pylint | ❌ |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ steps.mypy.outputs.MYPY_EXIT_CODE }}" -eq "0" ]; then
          echo "| mypy | ✅ |" >> $GITHUB_STEP_SUMMARY
        else
          echo "| mypy | ❌ |" >> $GITHUB_STEP_SUMMARY
        fi